program -> statement* EOF ;

declaration -> varDecl
            | statement ;

statement -> exprStmt | printStmt ;

printStmt -> "print(" expression ");" ;

varDecl -> "let" IDENTIFIER ( "=" expression )? ";" ;

exprStmt -> expression ";" ;

expression -> assignment ;

assignment -> IDENTIFIER "=" assignment
            | equality ;

equality -> comparison ( ( "!=" | "==" ) comparison )* ;

comparison -> addition ( ( ">" | ">=" | "<" | "<=" ) addition )* ;

addition -> multiplication ( ( "+" | "-" ) multiplication )* ;

multiplication -> unary ( ( "*" | "/" | "%" ) unary )* ;

unary -> ( "!" | "-" ) primary | primary ;

primary -> "false" | "true" | "none"
        | NUMBER | STRING | IDENTIFIER
        | "(" expression ")" ;
